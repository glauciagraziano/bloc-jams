{"version":3,"sources":["app/scripts/album.js","app/scripts/app.js","app/scripts/collection.js","app/scripts/landing.js"],"names":[],"mappingszJA;AAAA;CCAA;AAAA;AACA;AACA;AAFA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9DA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;AAAA","file":"public/javascripts/app.js","sourcesContent":["var currentlyPlayingSong = null;\n\nvar createSongRow = function(songNumber, songName, songLength) {\n   \n    var template =\n         '<tr>'\n        + '<td class=\"song-number col-md-1\" data-song-number=\"' + songNumber + '\">' + songNumber + '</td>'\n        + '  <td class=\"col-md-9\">' + songName + '</td>'\n        + '  <td class=\"col-md-2\">' + songLength + '</td>'\n        + '</tr>'\n        ;\n \n//Instead of returning the row immediately, we'll attach hover functionality to it first.\n  \n    var $row = $(template);\n  \n// Change from a song number to play button when the song isn't playing and we hover over the row.\n    var onHover = function(event) {\n      var songNumberCell = $(this).find('.song-number');\n        var songNumber = songNumberCell.data('song-number');\n        if (songNumber !== currentlyPlayingSong) {\n        songNumberCell.html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n      }\n    };\n \n    var offHover = function(event) {\n      var songNumberCell = $(this).find('.song-number');\n        var songNumber = songNumberCell.data('song-number');\n        if (songNumber !== currentlyPlayingSong) {\n        songNumberCell.html(songNumber);\n      }\n    };\n\n    $row.find('.song-number').click(clickHandler);\n    $row.hover(onHover, offHover);\n  \n    return $row;\n  };\n  \n//Toggle the play, pause, and song number based on the button clicked\nvar clickHandler = function(event) {\n    var songNumber = $(this).data('song-number');\n  \n    if (currentlyPlayingSong !== null) {\n    // Revert to song number for currently playing song because user started playing new song.\n      var currentlyPlayingCell = $('.song-number[data-song-number=\"' + currentlyPlayingSong + '\"]');\n      currentlyPlayingCell.html(currentlyPlayingSong);\n    }\n  \n    if (currentlyPlayingSong !== songNumber) {\n    // Switch from Play -> Pause button to indicate new song is playing.\n    $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-pause\"></i></a>');\n       currentlyPlayingSong = songNumber;\n    }\n    else if (currentlyPlayingSong === songNumber) {\n    // Switch from Pause -> Play button to pause currently playing song.\n    $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n       currentlyPlayingSong = null;\n    }\n  };\n\nvar changeAlbumView = function(album) {\n    // Update the album title\n    var $albumTitle = $('.album-title');\n    $albumTitle.text(album.name);\n    \n    // Updated the album Artist\n    var $albumArtist = $('.album-artist');\n    $albumArtist.text(album.artist);\n    \n    //Update the meta information\n    var $albumMeta = $('.album-meta-info');\n    $albumMeta.text(album.year + \" on \" + album.label);\n    \n    //Update the album image\n    var $albumImage = $('.album-image img');\n    $albumImage.attr('src', album.albumArtUrl);\n    \n    //Update the Song List\n    var $songList = $(\".album-song-listing\");\n    $songList.empty();\n    var songs = album.songs; \n    for (var i = 0; i < songs.length; i++) {\n      var songData = songs[i];\n      var $newRow = createSongRow(i + 1, songData.name, songData.length);\n      $songList.append($newRow);\n    }\n};\n\n// This 'if'condition is used to prevent the jQuery modifications\n// from happening on a non-Album view pages\n// - Use a regex to validate that the url has \"/album\" in its path\nif (document.URL.match(/\\/album.html/)) {\n  // Wait until the HTML is fully processed. \n  $(document).ready(function() {\n    changeAlbumView(albumPicasso)\n    $('.next').click(function() {\n     changeAlbumView(albumMarconi)\n    });\n    $('.prev').click(function() {\n     changeAlbumView(albumPicasso)\n    });\n  });\n}\n\n//Example Album\nvar albumPicasso = {\n  name: 'The Colors',\n  artist: 'Pablo Picasso',\n  label: 'Cubism',\n  year: '1881',\n  albumArtUrl: '/images/album-paceholder.png',\n  songs: [\n    { name: 'Blue', length: '4:26'},\n    { name: 'Green', length: '3:14'},\n    { name: 'Red', length: '5:01'},\n    { name: 'Pink', length: '3:21'},\n    { name: 'Magenta', length: '2:15'}\n  ]\n};\n\n // Another Example Album\n var albumMarconi = {\n   name: 'The Telephone',\n   artist: 'Guglielmo Marconi',\n   label: 'EM',\n   year: '1909',\n   albumArtUrl: '/images/album-placeholder.png',\n   songs: [\n       { name: 'Hello, Operator?', length: '1:01' },\n       { name: 'Ring, ring, ring', length: '5:01' },\n       { name: 'Fits in your pocket', length: '3:21'},\n       { name: 'Can you hear me now?', length: '3:14' },\n       { name: 'Wrong phone number', length: '2:15'}\n     ]\n };\n\n// Another Example Album\n var albumMatisse = {\n   name: 'The Fauves',\n   artist: 'Henri Matisse',\n   label: 'Fauvism',\n   year: '1909',\n   albumArtUrl: '/images/album-placeholder.png',\n   songs: [\n       { name: 'Dance', length: '1:01' },\n       { name: 'Blue Nude', length: '5:01' },\n       { name: 'The open window', length: '3:21'},\n       { name: 'Woman with a hat', length: '3:14' },\n       { name: 'Green Stripe', length: '2:15'}\n     ]\n };\n\n","require(\"./landing\");\nrequire('./collection');\nrequire('./album');"," var buildAlbumThumbnail = function() {\n    var template =\n        '<div class=\"collection-album-container col-md-2\">'\n      + '  <div class=\"collection-album-image-container\">'\n      + '    <img src=\"/images/album-placeholder.png\"/>'\n      + '  </div>'\n      + '  <div class=\"caption album-collection-info\">'\n      + '    <p>'\n      + '      <a class=\"album-name\" href=\"/album.html\"> Album Name </a>'\n      + '      <br/>'\n      + '      <a href=\"/album.html\"> Artist name </a>'\n      + '      <br/>'\n      + '      X songs'\n      + '      <br/>'\n      + '      X:XX Total Length'\n      + '      <br/>'\n      + '    </p>'\n      + '  </div>'\n      + '</div>';\n \n   return $(template);\n };\n\nvar buildAlbumOverlay = function(albumURL) {\n  var template =\n        '<div class=\"collection-album-image-overlay\">'\n      + '  <div class=\"collection-overlay-content\">'\n      + '    <a class=\"collection-overlay-button\" href=\"' + albumURL + '\">'\n      + '      <i class=\"fa fa-play\"></i>'\n      + '    </a>'\n      + '    &nbsp;'\n      + '    <a class=\"collection-overlay-button\">'\n      + '      <i class=\"fa fa-plus\"></i>'\n      + '    </a>'\n      + '  </div>'\n      + '</div>'\n      ;\n    return $(template);\n}\n\nvar updateCollectionView = function() {\n  var $collection = $(\".collection-container .row\");\n  $collection.empty();\n  var random = Math.random() * (100 - 25) + 25;  // x is random, from 25 to 100\n  for (var i = 0;  i < random; i++) {\n    var $newThumbnail = buildAlbumThumbnail();\n      $collection.append($newThumbnail);\n  }\nvar onHover = function(event) {\n    $(this).append(buildAlbumOverlay(\"/album.html\"));\n  };\nvar offHover = function(event) {\n  $(this).find('.collection-album-image-overlay').remove();\n};\n\n   $collection.find('.collection-album-image-container').hover(onHover, offHover);\n};\nif(document.URL.match(/\\/collection.html/)) {\n  //Wait until the HTML is fully processed. \n  $(document).ready(function() {\n    updateCollectionView();\n  });\n}","$(document).ready(function() {\n  $('.hero-content h3').click(function() {\n    var subText = $(this).text();\n    $(this).text(subText + \"!\");\n  });\n  $('.hero-content h3').click(function() {\n     console.log('Hover action triggered.');\n     $(this).css('color','red');\n  });\n  $('.selling-points .point h5').click(function() {\n    console.log('Click action triggered');\n    $(this).css('font-size', '30px');\n  });\n  var onHoverAction = function(event) {\n    console.log('Hover action triggered');\n    $(this).animate({'margin-top':'10px'});\n  };\n  var offHoverAction = function(event) {\n    console.log('Hover action triggered');\n    $(this).animate({'margin-top':'0px'});\n  };\n  \n  $('.selling-points .point').hover(onHoverAction, offHoverAction);\n  $('.navbar-header').click(function() {\n    console.log('Click action triggered');\n    $(this).fadeOut(\"slow\");\n  });\n});\n\n"]}